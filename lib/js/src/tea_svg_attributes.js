// Generated by BUCKLESCRIPT VERSION 1.4.1 , PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block");
var Vdom  = require("./vdom");

function accentHeight(param) {
  return /* Attribute */Block.__(1, [
            "",
            "accent-height",
            param
          ]);
}

function accelerate(param) {
  return /* Attribute */Block.__(1, [
            "",
            "accelerate",
            param
          ]);
}

function accumulate(param) {
  return /* Attribute */Block.__(1, [
            "",
            "accumulate",
            param
          ]);
}

function additive(param) {
  return /* Attribute */Block.__(1, [
            "",
            "additive",
            param
          ]);
}

function alphabetic(param) {
  return /* Attribute */Block.__(1, [
            "",
            "alphabetic",
            param
          ]);
}

function allowReorder(param) {
  return /* Attribute */Block.__(1, [
            "",
            "allowReorder",
            param
          ]);
}

function amplitude(param) {
  return /* Attribute */Block.__(1, [
            "",
            "amplitude",
            param
          ]);
}

function arabicForm(param) {
  return /* Attribute */Block.__(1, [
            "",
            "arabic-form",
            param
          ]);
}

function ascent(param) {
  return /* Attribute */Block.__(1, [
            "",
            "ascent",
            param
          ]);
}

function attributeName(param) {
  return /* Attribute */Block.__(1, [
            "",
            "attributeName",
            param
          ]);
}

function attributeType(param) {
  return /* Attribute */Block.__(1, [
            "",
            "attributeType",
            param
          ]);
}

function autoReverse(param) {
  return /* Attribute */Block.__(1, [
            "",
            "autoReverse",
            param
          ]);
}

function azimuth(param) {
  return /* Attribute */Block.__(1, [
            "",
            "azimuth",
            param
          ]);
}

function baseFrequency(param) {
  return /* Attribute */Block.__(1, [
            "",
            "baseFrequency",
            param
          ]);
}

function baseProfile(param) {
  return /* Attribute */Block.__(1, [
            "",
            "baseProfile",
            param
          ]);
}

function bbox(param) {
  return /* Attribute */Block.__(1, [
            "",
            "bbox",
            param
          ]);
}

function begin$prime(param) {
  return /* Attribute */Block.__(1, [
            "",
            "begin",
            param
          ]);
}

function bias(param) {
  return /* Attribute */Block.__(1, [
            "",
            "bias",
            param
          ]);
}

function by(param) {
  return /* Attribute */Block.__(1, [
            "",
            "by",
            param
          ]);
}

function calcMode(param) {
  return /* Attribute */Block.__(1, [
            "",
            "calcMode",
            param
          ]);
}

function capHeight(param) {
  return /* Attribute */Block.__(1, [
            "",
            "cap-height",
            param
          ]);
}

function class$prime(param) {
  return /* Attribute */Block.__(1, [
            "",
            "class",
            param
          ]);
}

function clipPathUnits(param) {
  return /* Attribute */Block.__(1, [
            "",
            "clipPathUnits",
            param
          ]);
}

function contentScriptType(param) {
  return /* Attribute */Block.__(1, [
            "",
            "contentScriptType",
            param
          ]);
}

function contentStyleType(param) {
  return /* Attribute */Block.__(1, [
            "",
            "contentStyleType",
            param
          ]);
}

function cx(param) {
  return /* Attribute */Block.__(1, [
            "",
            "cx",
            param
          ]);
}

function cy(param) {
  return /* Attribute */Block.__(1, [
            "",
            "cy",
            param
          ]);
}

function d(param) {
  return /* Attribute */Block.__(1, [
            "",
            "d",
            param
          ]);
}

function decelerate(param) {
  return /* Attribute */Block.__(1, [
            "",
            "decelerate",
            param
          ]);
}

function descent(param) {
  return /* Attribute */Block.__(1, [
            "",
            "descent",
            param
          ]);
}

function diffuseConstant(param) {
  return /* Attribute */Block.__(1, [
            "",
            "diffuseConstant",
            param
          ]);
}

function divisor(param) {
  return /* Attribute */Block.__(1, [
            "",
            "divisor",
            param
          ]);
}

function dur(param) {
  return /* Attribute */Block.__(1, [
            "",
            "dur",
            param
          ]);
}

function dx(param) {
  return /* Attribute */Block.__(1, [
            "",
            "dx",
            param
          ]);
}

function dy(param) {
  return /* Attribute */Block.__(1, [
            "",
            "dy",
            param
          ]);
}

function edgeMode(param) {
  return /* Attribute */Block.__(1, [
            "",
            "edgeMode",
            param
          ]);
}

function elevation(param) {
  return /* Attribute */Block.__(1, [
            "",
            "elevation",
            param
          ]);
}

function end$prime(param) {
  return /* Attribute */Block.__(1, [
            "",
            "end",
            param
          ]);
}

function exponent(param) {
  return /* Attribute */Block.__(1, [
            "",
            "exponent",
            param
          ]);
}

function externalResourcesRequired(param) {
  return /* Attribute */Block.__(1, [
            "",
            "externalResourcesRequired",
            param
          ]);
}

function filterRes(param) {
  return /* Attribute */Block.__(1, [
            "",
            "filterRes",
            param
          ]);
}

function filterUnits(param) {
  return /* Attribute */Block.__(1, [
            "",
            "filterUnits",
            param
          ]);
}

function format(param) {
  return /* Attribute */Block.__(1, [
            "",
            "format",
            param
          ]);
}

function from(param) {
  return /* Attribute */Block.__(1, [
            "",
            "from",
            param
          ]);
}

function fx(param) {
  return /* Attribute */Block.__(1, [
            "",
            "fx",
            param
          ]);
}

function fy(param) {
  return /* Attribute */Block.__(1, [
            "",
            "fy",
            param
          ]);
}

function g1(param) {
  return /* Attribute */Block.__(1, [
            "",
            "g1",
            param
          ]);
}

function g2(param) {
  return /* Attribute */Block.__(1, [
            "",
            "g2",
            param
          ]);
}

function glyphName(param) {
  return /* Attribute */Block.__(1, [
            "",
            "glyph-name",
            param
          ]);
}

function glyphRef(param) {
  return /* Attribute */Block.__(1, [
            "",
            "glyphRef",
            param
          ]);
}

function gradientTransform(param) {
  return /* Attribute */Block.__(1, [
            "",
            "gradientTransform",
            param
          ]);
}

function gradientUnits(param) {
  return /* Attribute */Block.__(1, [
            "",
            "gradientUnits",
            param
          ]);
}

function hanging(param) {
  return /* Attribute */Block.__(1, [
            "",
            "hanging",
            param
          ]);
}

function height(param) {
  return /* Attribute */Block.__(1, [
            "",
            "height",
            param
          ]);
}

function horizAdvX(param) {
  return /* Attribute */Block.__(1, [
            "",
            "horiz-adv-x",
            param
          ]);
}

function horizOriginX(param) {
  return /* Attribute */Block.__(1, [
            "",
            "horiz-origin-x",
            param
          ]);
}

function horizOriginY(param) {
  return /* Attribute */Block.__(1, [
            "",
            "horiz-origin-y",
            param
          ]);
}

function id(param) {
  return /* Attribute */Block.__(1, [
            "",
            "id",
            param
          ]);
}

function ideographic(param) {
  return /* Attribute */Block.__(1, [
            "",
            "ideographic",
            param
          ]);
}

function in$prime(param) {
  return /* Attribute */Block.__(1, [
            "",
            "in",
            param
          ]);
}

function in2(param) {
  return /* Attribute */Block.__(1, [
            "",
            "in2",
            param
          ]);
}

function intercept(param) {
  return /* Attribute */Block.__(1, [
            "",
            "intercept",
            param
          ]);
}

function k(param) {
  return /* Attribute */Block.__(1, [
            "",
            "k",
            param
          ]);
}

function k1(param) {
  return /* Attribute */Block.__(1, [
            "",
            "k1",
            param
          ]);
}

function k2(param) {
  return /* Attribute */Block.__(1, [
            "",
            "k2",
            param
          ]);
}

function k3(param) {
  return /* Attribute */Block.__(1, [
            "",
            "k3",
            param
          ]);
}

function k4(param) {
  return /* Attribute */Block.__(1, [
            "",
            "k4",
            param
          ]);
}

function kernelMatrix(param) {
  return /* Attribute */Block.__(1, [
            "",
            "kernelMatrix",
            param
          ]);
}

function kernelUnitLength(param) {
  return /* Attribute */Block.__(1, [
            "",
            "kernelUnitLength",
            param
          ]);
}

function keyPoints(param) {
  return /* Attribute */Block.__(1, [
            "",
            "keyPoints",
            param
          ]);
}

function keySplines(param) {
  return /* Attribute */Block.__(1, [
            "",
            "keySplines",
            param
          ]);
}

function keyTimes(param) {
  return /* Attribute */Block.__(1, [
            "",
            "keyTimes",
            param
          ]);
}

function lang(param) {
  return /* Attribute */Block.__(1, [
            "",
            "lang",
            param
          ]);
}

function lengthAdjust(param) {
  return /* Attribute */Block.__(1, [
            "",
            "lengthAdjust",
            param
          ]);
}

function limitingConeAngle(param) {
  return /* Attribute */Block.__(1, [
            "",
            "limitingConeAngle",
            param
          ]);
}

function local(param) {
  return /* Attribute */Block.__(1, [
            "",
            "local",
            param
          ]);
}

function markerHeight(param) {
  return /* Attribute */Block.__(1, [
            "",
            "markerHeight",
            param
          ]);
}

function markerUnits(param) {
  return /* Attribute */Block.__(1, [
            "",
            "markerUnits",
            param
          ]);
}

function markerWidth(param) {
  return /* Attribute */Block.__(1, [
            "",
            "markerWidth",
            param
          ]);
}

function maskContentUnits(param) {
  return /* Attribute */Block.__(1, [
            "",
            "maskContentUnits",
            param
          ]);
}

function maskUnits(param) {
  return /* Attribute */Block.__(1, [
            "",
            "maskUnits",
            param
          ]);
}

function mathematical(param) {
  return /* Attribute */Block.__(1, [
            "",
            "mathematical",
            param
          ]);
}

function max(param) {
  return /* Attribute */Block.__(1, [
            "",
            "max",
            param
          ]);
}

function media(param) {
  return /* Attribute */Block.__(1, [
            "",
            "media",
            param
          ]);
}

function method$prime(param) {
  return /* Attribute */Block.__(1, [
            "",
            "method",
            param
          ]);
}

function min(param) {
  return /* Attribute */Block.__(1, [
            "",
            "min",
            param
          ]);
}

function mode(param) {
  return /* Attribute */Block.__(1, [
            "",
            "mode",
            param
          ]);
}

function name(param) {
  return /* Attribute */Block.__(1, [
            "",
            "name",
            param
          ]);
}

function numOctaves(param) {
  return /* Attribute */Block.__(1, [
            "",
            "numOctaves",
            param
          ]);
}

function offset(param) {
  return /* Attribute */Block.__(1, [
            "",
            "offset",
            param
          ]);
}

function operator(param) {
  return /* Attribute */Block.__(1, [
            "",
            "operator",
            param
          ]);
}

function order(param) {
  return /* Attribute */Block.__(1, [
            "",
            "order",
            param
          ]);
}

function orient(param) {
  return /* Attribute */Block.__(1, [
            "",
            "orient",
            param
          ]);
}

function orientation(param) {
  return /* Attribute */Block.__(1, [
            "",
            "orientation",
            param
          ]);
}

function origin(param) {
  return /* Attribute */Block.__(1, [
            "",
            "origin",
            param
          ]);
}

function overlinePosition(param) {
  return /* Attribute */Block.__(1, [
            "",
            "overline-position",
            param
          ]);
}

function overlineThickness(param) {
  return /* Attribute */Block.__(1, [
            "",
            "overline-thickness",
            param
          ]);
}

function panose1(param) {
  return /* Attribute */Block.__(1, [
            "",
            "panose-1",
            param
          ]);
}

function path(param) {
  return /* Attribute */Block.__(1, [
            "",
            "path",
            param
          ]);
}

function pathLength(param) {
  return /* Attribute */Block.__(1, [
            "",
            "pathLength",
            param
          ]);
}

function patternContentUnits(param) {
  return /* Attribute */Block.__(1, [
            "",
            "patternContentUnits",
            param
          ]);
}

function patternTransform(param) {
  return /* Attribute */Block.__(1, [
            "",
            "patternTransform",
            param
          ]);
}

function patternUnits(param) {
  return /* Attribute */Block.__(1, [
            "",
            "patternUnits",
            param
          ]);
}

function pointOrder(param) {
  return /* Attribute */Block.__(1, [
            "",
            "point-order",
            param
          ]);
}

function points(param) {
  return /* Attribute */Block.__(1, [
            "",
            "points",
            param
          ]);
}

function pointsAtX(param) {
  return /* Attribute */Block.__(1, [
            "",
            "pointsAtX",
            param
          ]);
}

function pointsAtY(param) {
  return /* Attribute */Block.__(1, [
            "",
            "pointsAtY",
            param
          ]);
}

function pointsAtZ(param) {
  return /* Attribute */Block.__(1, [
            "",
            "pointsAtZ",
            param
          ]);
}

function preserveAlpha(param) {
  return /* Attribute */Block.__(1, [
            "",
            "preserveAlpha",
            param
          ]);
}

function preserveAspectRatio(param) {
  return /* Attribute */Block.__(1, [
            "",
            "preserveAspectRatio",
            param
          ]);
}

function primitiveUnits(param) {
  return /* Attribute */Block.__(1, [
            "",
            "primitiveUnits",
            param
          ]);
}

function r(param) {
  return /* Attribute */Block.__(1, [
            "",
            "r",
            param
          ]);
}

function radius(param) {
  return /* Attribute */Block.__(1, [
            "",
            "radius",
            param
          ]);
}

function refX(param) {
  return /* Attribute */Block.__(1, [
            "",
            "refX",
            param
          ]);
}

function refY(param) {
  return /* Attribute */Block.__(1, [
            "",
            "refY",
            param
          ]);
}

function renderingIntent(param) {
  return /* Attribute */Block.__(1, [
            "",
            "rendering-intent",
            param
          ]);
}

function repeatCount(param) {
  return /* Attribute */Block.__(1, [
            "",
            "repeatCount",
            param
          ]);
}

function repeatDur(param) {
  return /* Attribute */Block.__(1, [
            "",
            "repeatDur",
            param
          ]);
}

function requiredExtensions(param) {
  return /* Attribute */Block.__(1, [
            "",
            "requiredExtensions",
            param
          ]);
}

function requiredFeatures(param) {
  return /* Attribute */Block.__(1, [
            "",
            "requiredFeatures",
            param
          ]);
}

function restart(param) {
  return /* Attribute */Block.__(1, [
            "",
            "restart",
            param
          ]);
}

function result(param) {
  return /* Attribute */Block.__(1, [
            "",
            "result",
            param
          ]);
}

function rotate(param) {
  return /* Attribute */Block.__(1, [
            "",
            "rotate",
            param
          ]);
}

function rx(param) {
  return /* Attribute */Block.__(1, [
            "",
            "rx",
            param
          ]);
}

function ry(param) {
  return /* Attribute */Block.__(1, [
            "",
            "ry",
            param
          ]);
}

function scale(param) {
  return /* Attribute */Block.__(1, [
            "",
            "scale",
            param
          ]);
}

function seed(param) {
  return /* Attribute */Block.__(1, [
            "",
            "seed",
            param
          ]);
}

function slope(param) {
  return /* Attribute */Block.__(1, [
            "",
            "slope",
            param
          ]);
}

function spacing(param) {
  return /* Attribute */Block.__(1, [
            "",
            "spacing",
            param
          ]);
}

function specularConstant(param) {
  return /* Attribute */Block.__(1, [
            "",
            "specularConstant",
            param
          ]);
}

function specularExponent(param) {
  return /* Attribute */Block.__(1, [
            "",
            "specularExponent",
            param
          ]);
}

function speed(param) {
  return /* Attribute */Block.__(1, [
            "",
            "speed",
            param
          ]);
}

function spreadMethod(param) {
  return /* Attribute */Block.__(1, [
            "",
            "spreadMethod",
            param
          ]);
}

function startOffset(param) {
  return /* Attribute */Block.__(1, [
            "",
            "startOffset",
            param
          ]);
}

function stdDeviation(param) {
  return /* Attribute */Block.__(1, [
            "",
            "stdDeviation",
            param
          ]);
}

function stemh(param) {
  return /* Attribute */Block.__(1, [
            "",
            "stemh",
            param
          ]);
}

function stemv(param) {
  return /* Attribute */Block.__(1, [
            "",
            "stemv",
            param
          ]);
}

function stitchTiles(param) {
  return /* Attribute */Block.__(1, [
            "",
            "stitchTiles",
            param
          ]);
}

function strikethroughPosition(param) {
  return /* Attribute */Block.__(1, [
            "",
            "strikethrough-position",
            param
          ]);
}

function strikethroughThickness(param) {
  return /* Attribute */Block.__(1, [
            "",
            "strikethrough-thickness",
            param
          ]);
}

function string(param) {
  return /* Attribute */Block.__(1, [
            "",
            "string",
            param
          ]);
}

function style(param) {
  return /* Attribute */Block.__(1, [
            "",
            "style",
            param
          ]);
}

function surfaceScale(param) {
  return /* Attribute */Block.__(1, [
            "",
            "surfaceScale",
            param
          ]);
}

function systemLanguage(param) {
  return /* Attribute */Block.__(1, [
            "",
            "systemLanguage",
            param
          ]);
}

function tableValues(param) {
  return /* Attribute */Block.__(1, [
            "",
            "tableValues",
            param
          ]);
}

function target(param) {
  return /* Attribute */Block.__(1, [
            "",
            "target",
            param
          ]);
}

function targetX(param) {
  return /* Attribute */Block.__(1, [
            "",
            "targetX",
            param
          ]);
}

function targetY(param) {
  return /* Attribute */Block.__(1, [
            "",
            "targetY",
            param
          ]);
}

function textLength(param) {
  return /* Attribute */Block.__(1, [
            "",
            "textLength",
            param
          ]);
}

function title(param) {
  return /* Attribute */Block.__(1, [
            "",
            "title",
            param
          ]);
}

function to$prime(param) {
  return /* Attribute */Block.__(1, [
            "",
            "to",
            param
          ]);
}

function transform(param) {
  return /* Attribute */Block.__(1, [
            "",
            "transform",
            param
          ]);
}

function type$prime(param) {
  return /* Attribute */Block.__(1, [
            "",
            "type",
            param
          ]);
}

function u1(param) {
  return /* Attribute */Block.__(1, [
            "",
            "u1",
            param
          ]);
}

function u2(param) {
  return /* Attribute */Block.__(1, [
            "",
            "u2",
            param
          ]);
}

function underlinePosition(param) {
  return /* Attribute */Block.__(1, [
            "",
            "underline-position",
            param
          ]);
}

function underlineThickness(param) {
  return /* Attribute */Block.__(1, [
            "",
            "underline-thickness",
            param
          ]);
}

function unicode(param) {
  return /* Attribute */Block.__(1, [
            "",
            "unicode",
            param
          ]);
}

function unicodeRange(param) {
  return /* Attribute */Block.__(1, [
            "",
            "unicode-range",
            param
          ]);
}

function unitsPerEm(param) {
  return /* Attribute */Block.__(1, [
            "",
            "units-per-em",
            param
          ]);
}

function vAlphabetic(param) {
  return /* Attribute */Block.__(1, [
            "",
            "v-alphabetic",
            param
          ]);
}

function vHanging(param) {
  return /* Attribute */Block.__(1, [
            "",
            "v-hanging",
            param
          ]);
}

function vIdeographic(param) {
  return /* Attribute */Block.__(1, [
            "",
            "v-ideographic",
            param
          ]);
}

function vMathematical(param) {
  return /* Attribute */Block.__(1, [
            "",
            "v-mathematical",
            param
          ]);
}

function values(param) {
  return /* Attribute */Block.__(1, [
            "",
            "values",
            param
          ]);
}

function version(param) {
  return /* Attribute */Block.__(1, [
            "",
            "version",
            param
          ]);
}

function vertAdvY(param) {
  return /* Attribute */Block.__(1, [
            "",
            "vert-adv-y",
            param
          ]);
}

function vertOriginX(param) {
  return /* Attribute */Block.__(1, [
            "",
            "vert-origin-x",
            param
          ]);
}

function vertOriginY(param) {
  return /* Attribute */Block.__(1, [
            "",
            "vert-origin-y",
            param
          ]);
}

function viewBox(param) {
  return /* Attribute */Block.__(1, [
            "",
            "viewBox",
            param
          ]);
}

function viewTarget(param) {
  return /* Attribute */Block.__(1, [
            "",
            "viewTarget",
            param
          ]);
}

function width(param) {
  return /* Attribute */Block.__(1, [
            "",
            "width",
            param
          ]);
}

function widths(param) {
  return /* Attribute */Block.__(1, [
            "",
            "widths",
            param
          ]);
}

function x(param) {
  return /* Attribute */Block.__(1, [
            "",
            "x",
            param
          ]);
}

function xHeight(param) {
  return /* Attribute */Block.__(1, [
            "",
            "x-height",
            param
          ]);
}

function x1(param) {
  return /* Attribute */Block.__(1, [
            "",
            "x1",
            param
          ]);
}

function x2(param) {
  return /* Attribute */Block.__(1, [
            "",
            "x2",
            param
          ]);
}

function xChannelSelector(param) {
  return /* Attribute */Block.__(1, [
            "",
            "xChannelSelector",
            param
          ]);
}

function xlinkActuate(param) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/1999/xlink",
            "xlink:actuate",
            param
          ]);
}

function xlinkArcrole(param) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/1999/xlink",
            "xlink:arcrole",
            param
          ]);
}

function xlinkHref(param) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/1999/xlink",
            "xlink:href",
            param
          ]);
}

function xlinkRole(param) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/1999/xlink",
            "xlink:role",
            param
          ]);
}

function xlinkShow(param) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/1999/xlink",
            "xlink:show",
            param
          ]);
}

function xlinkTitle(param) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/1999/xlink",
            "xlink:title",
            param
          ]);
}

function xlinkType(param) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/1999/xlink",
            "xlink:type",
            param
          ]);
}

function xmlBase(param) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/XML/1998/namespace",
            "xml:base",
            param
          ]);
}

function xmlLang(param) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/XML/1998/namespace",
            "xml:lang",
            param
          ]);
}

function xmlSpace(param) {
  return /* Attribute */Block.__(1, [
            "http://www.w3.org/XML/1998/namespace",
            "xml:space",
            param
          ]);
}

function y(param) {
  return /* Attribute */Block.__(1, [
            "",
            "y",
            param
          ]);
}

function y1(param) {
  return /* Attribute */Block.__(1, [
            "",
            "y1",
            param
          ]);
}

function y2(param) {
  return /* Attribute */Block.__(1, [
            "",
            "y2",
            param
          ]);
}

function yChannelSelector(param) {
  return /* Attribute */Block.__(1, [
            "",
            "yChannelSelector",
            param
          ]);
}

function z(param) {
  return /* Attribute */Block.__(1, [
            "",
            "z",
            param
          ]);
}

function zoomAndPan(param) {
  return /* Attribute */Block.__(1, [
            "",
            "zoomAndPan",
            param
          ]);
}

function alignmentBaseline(param) {
  return /* Attribute */Block.__(1, [
            "",
            "alignment-baseline",
            param
          ]);
}

function baselineShift(param) {
  return /* Attribute */Block.__(1, [
            "",
            "baseline-shift",
            param
          ]);
}

function clipPath(param) {
  return /* Attribute */Block.__(1, [
            "",
            "clip-path",
            param
          ]);
}

function clipRule(param) {
  return /* Attribute */Block.__(1, [
            "",
            "clip-rule",
            param
          ]);
}

function clip(param) {
  return /* Attribute */Block.__(1, [
            "",
            "clip",
            param
          ]);
}

function colorInterpolationFilters(param) {
  return /* Attribute */Block.__(1, [
            "",
            "color-interpolation-filters",
            param
          ]);
}

function colorInterpolation(param) {
  return /* Attribute */Block.__(1, [
            "",
            "color-interpolation",
            param
          ]);
}

function colorProfile(param) {
  return /* Attribute */Block.__(1, [
            "",
            "color-profile",
            param
          ]);
}

function colorRendering(param) {
  return /* Attribute */Block.__(1, [
            "",
            "color-rendering",
            param
          ]);
}

function color(param) {
  return /* Attribute */Block.__(1, [
            "",
            "color",
            param
          ]);
}

function cursor(param) {
  return /* Attribute */Block.__(1, [
            "",
            "cursor",
            param
          ]);
}

function direction(param) {
  return /* Attribute */Block.__(1, [
            "",
            "direction",
            param
          ]);
}

function display(param) {
  return /* Attribute */Block.__(1, [
            "",
            "display",
            param
          ]);
}

function dominantBaseline(param) {
  return /* Attribute */Block.__(1, [
            "",
            "dominant-baseline",
            param
          ]);
}

function enableBackground(param) {
  return /* Attribute */Block.__(1, [
            "",
            "enable-background",
            param
          ]);
}

function fillOpacity(param) {
  return /* Attribute */Block.__(1, [
            "",
            "fill-opacity",
            param
          ]);
}

function fillRule(param) {
  return /* Attribute */Block.__(1, [
            "",
            "fill-rule",
            param
          ]);
}

function fill(param) {
  return /* Attribute */Block.__(1, [
            "",
            "fill",
            param
          ]);
}

function filter(param) {
  return /* Attribute */Block.__(1, [
            "",
            "filter",
            param
          ]);
}

function floodColor(param) {
  return /* Attribute */Block.__(1, [
            "",
            "flood-color",
            param
          ]);
}

function floodOpacity(param) {
  return /* Attribute */Block.__(1, [
            "",
            "flood-opacity",
            param
          ]);
}

function fontFamily(param) {
  return /* Attribute */Block.__(1, [
            "",
            "font-family",
            param
          ]);
}

function fontSizeAdjust(param) {
  return /* Attribute */Block.__(1, [
            "",
            "font-size-adjust",
            param
          ]);
}

function fontSize(param) {
  return /* Attribute */Block.__(1, [
            "",
            "font-size",
            param
          ]);
}

function fontStretch(param) {
  return /* Attribute */Block.__(1, [
            "",
            "font-stretch",
            param
          ]);
}

function fontStyle(param) {
  return /* Attribute */Block.__(1, [
            "",
            "font-style",
            param
          ]);
}

function fontVariant(param) {
  return /* Attribute */Block.__(1, [
            "",
            "font-variant",
            param
          ]);
}

function fontWeight(param) {
  return /* Attribute */Block.__(1, [
            "",
            "font-weight",
            param
          ]);
}

function glyphOrientationHorizontal(param) {
  return /* Attribute */Block.__(1, [
            "",
            "glyph-orientation-horizontal",
            param
          ]);
}

function glyphOrientationVertical(param) {
  return /* Attribute */Block.__(1, [
            "",
            "glyph-orientation-vertical",
            param
          ]);
}

function imageRendering(param) {
  return /* Attribute */Block.__(1, [
            "",
            "image-rendering",
            param
          ]);
}

function kerning(param) {
  return /* Attribute */Block.__(1, [
            "",
            "kerning",
            param
          ]);
}

function letterSpacing(param) {
  return /* Attribute */Block.__(1, [
            "",
            "letter-spacing",
            param
          ]);
}

function lightingColor(param) {
  return /* Attribute */Block.__(1, [
            "",
            "lighting-color",
            param
          ]);
}

function markerEnd(param) {
  return /* Attribute */Block.__(1, [
            "",
            "marker-end",
            param
          ]);
}

function markerMid(param) {
  return /* Attribute */Block.__(1, [
            "",
            "marker-mid",
            param
          ]);
}

function markerStart(param) {
  return /* Attribute */Block.__(1, [
            "",
            "marker-start",
            param
          ]);
}

function mask(param) {
  return /* Attribute */Block.__(1, [
            "",
            "mask",
            param
          ]);
}

function opacity(param) {
  return /* Attribute */Block.__(1, [
            "",
            "opacity",
            param
          ]);
}

function overflow(param) {
  return /* Attribute */Block.__(1, [
            "",
            "overflow",
            param
          ]);
}

function pointerEvents(param) {
  return /* Attribute */Block.__(1, [
            "",
            "pointer-events",
            param
          ]);
}

function shapeRendering(param) {
  return /* Attribute */Block.__(1, [
            "",
            "shape-rendering",
            param
          ]);
}

function stopColor(param) {
  return /* Attribute */Block.__(1, [
            "",
            "stop-color",
            param
          ]);
}

function stopOpacity(param) {
  return /* Attribute */Block.__(1, [
            "",
            "stop-opacity",
            param
          ]);
}

function strokeDasharray(param) {
  return /* Attribute */Block.__(1, [
            "",
            "stroke-dasharray",
            param
          ]);
}

function strokeDashoffset(param) {
  return /* Attribute */Block.__(1, [
            "",
            "stroke-dashoffset",
            param
          ]);
}

function strokeLinecap(param) {
  return /* Attribute */Block.__(1, [
            "",
            "stroke-linecap",
            param
          ]);
}

function strokeLinejoin(param) {
  return /* Attribute */Block.__(1, [
            "",
            "stroke-linejoin",
            param
          ]);
}

function strokeMiterlimit(param) {
  return /* Attribute */Block.__(1, [
            "",
            "stroke-miterlimit",
            param
          ]);
}

function strokeOpacity(param) {
  return /* Attribute */Block.__(1, [
            "",
            "stroke-opacity",
            param
          ]);
}

function strokeWidth(param) {
  return /* Attribute */Block.__(1, [
            "",
            "stroke-width",
            param
          ]);
}

function stroke(param) {
  return /* Attribute */Block.__(1, [
            "",
            "stroke",
            param
          ]);
}

function textAnchor(param) {
  return /* Attribute */Block.__(1, [
            "",
            "text-anchor",
            param
          ]);
}

function textDecoration(param) {
  return /* Attribute */Block.__(1, [
            "",
            "text-decoration",
            param
          ]);
}

function textRendering(param) {
  return /* Attribute */Block.__(1, [
            "",
            "text-rendering",
            param
          ]);
}

function unicodeBidi(param) {
  return /* Attribute */Block.__(1, [
            "",
            "unicode-bidi",
            param
          ]);
}

function visibility(param) {
  return /* Attribute */Block.__(1, [
            "",
            "visibility",
            param
          ]);
}

function wordSpacing(param) {
  return /* Attribute */Block.__(1, [
            "",
            "word-spacing",
            param
          ]);
}

function writingMode(param) {
  return /* Attribute */Block.__(1, [
            "",
            "writing-mode",
            param
          ]);
}

exports.accentHeight               = accentHeight;
exports.accelerate                 = accelerate;
exports.accumulate                 = accumulate;
exports.additive                   = additive;
exports.alphabetic                 = alphabetic;
exports.allowReorder               = allowReorder;
exports.amplitude                  = amplitude;
exports.arabicForm                 = arabicForm;
exports.ascent                     = ascent;
exports.attributeName              = attributeName;
exports.attributeType              = attributeType;
exports.autoReverse                = autoReverse;
exports.azimuth                    = azimuth;
exports.baseFrequency              = baseFrequency;
exports.baseProfile                = baseProfile;
exports.bbox                       = bbox;
exports.begin$prime                = begin$prime;
exports.bias                       = bias;
exports.by                         = by;
exports.calcMode                   = calcMode;
exports.capHeight                  = capHeight;
exports.class$prime                = class$prime;
exports.clipPathUnits              = clipPathUnits;
exports.contentScriptType          = contentScriptType;
exports.contentStyleType           = contentStyleType;
exports.cx                         = cx;
exports.cy                         = cy;
exports.d                          = d;
exports.decelerate                 = decelerate;
exports.descent                    = descent;
exports.diffuseConstant            = diffuseConstant;
exports.divisor                    = divisor;
exports.dur                        = dur;
exports.dx                         = dx;
exports.dy                         = dy;
exports.edgeMode                   = edgeMode;
exports.elevation                  = elevation;
exports.end$prime                  = end$prime;
exports.exponent                   = exponent;
exports.externalResourcesRequired  = externalResourcesRequired;
exports.filterRes                  = filterRes;
exports.filterUnits                = filterUnits;
exports.format                     = format;
exports.from                       = from;
exports.fx                         = fx;
exports.fy                         = fy;
exports.g1                         = g1;
exports.g2                         = g2;
exports.glyphName                  = glyphName;
exports.glyphRef                   = glyphRef;
exports.gradientTransform          = gradientTransform;
exports.gradientUnits              = gradientUnits;
exports.hanging                    = hanging;
exports.height                     = height;
exports.horizAdvX                  = horizAdvX;
exports.horizOriginX               = horizOriginX;
exports.horizOriginY               = horizOriginY;
exports.id                         = id;
exports.ideographic                = ideographic;
exports.in$prime                   = in$prime;
exports.in2                        = in2;
exports.intercept                  = intercept;
exports.k                          = k;
exports.k1                         = k1;
exports.k2                         = k2;
exports.k3                         = k3;
exports.k4                         = k4;
exports.kernelMatrix               = kernelMatrix;
exports.kernelUnitLength           = kernelUnitLength;
exports.keyPoints                  = keyPoints;
exports.keySplines                 = keySplines;
exports.keyTimes                   = keyTimes;
exports.lang                       = lang;
exports.lengthAdjust               = lengthAdjust;
exports.limitingConeAngle          = limitingConeAngle;
exports.local                      = local;
exports.markerHeight               = markerHeight;
exports.markerUnits                = markerUnits;
exports.markerWidth                = markerWidth;
exports.maskContentUnits           = maskContentUnits;
exports.maskUnits                  = maskUnits;
exports.mathematical               = mathematical;
exports.max                        = max;
exports.media                      = media;
exports.method$prime               = method$prime;
exports.min                        = min;
exports.mode                       = mode;
exports.name                       = name;
exports.numOctaves                 = numOctaves;
exports.offset                     = offset;
exports.operator                   = operator;
exports.order                      = order;
exports.orient                     = orient;
exports.orientation                = orientation;
exports.origin                     = origin;
exports.overlinePosition           = overlinePosition;
exports.overlineThickness          = overlineThickness;
exports.panose1                    = panose1;
exports.path                       = path;
exports.pathLength                 = pathLength;
exports.patternContentUnits        = patternContentUnits;
exports.patternTransform           = patternTransform;
exports.patternUnits               = patternUnits;
exports.pointOrder                 = pointOrder;
exports.points                     = points;
exports.pointsAtX                  = pointsAtX;
exports.pointsAtY                  = pointsAtY;
exports.pointsAtZ                  = pointsAtZ;
exports.preserveAlpha              = preserveAlpha;
exports.preserveAspectRatio        = preserveAspectRatio;
exports.primitiveUnits             = primitiveUnits;
exports.r                          = r;
exports.radius                     = radius;
exports.refX                       = refX;
exports.refY                       = refY;
exports.renderingIntent            = renderingIntent;
exports.repeatCount                = repeatCount;
exports.repeatDur                  = repeatDur;
exports.requiredExtensions         = requiredExtensions;
exports.requiredFeatures           = requiredFeatures;
exports.restart                    = restart;
exports.result                     = result;
exports.rotate                     = rotate;
exports.rx                         = rx;
exports.ry                         = ry;
exports.scale                      = scale;
exports.seed                       = seed;
exports.slope                      = slope;
exports.spacing                    = spacing;
exports.specularConstant           = specularConstant;
exports.specularExponent           = specularExponent;
exports.speed                      = speed;
exports.spreadMethod               = spreadMethod;
exports.startOffset                = startOffset;
exports.stdDeviation               = stdDeviation;
exports.stemh                      = stemh;
exports.stemv                      = stemv;
exports.stitchTiles                = stitchTiles;
exports.strikethroughPosition      = strikethroughPosition;
exports.strikethroughThickness     = strikethroughThickness;
exports.string                     = string;
exports.style                      = style;
exports.surfaceScale               = surfaceScale;
exports.systemLanguage             = systemLanguage;
exports.tableValues                = tableValues;
exports.target                     = target;
exports.targetX                    = targetX;
exports.targetY                    = targetY;
exports.textLength                 = textLength;
exports.title                      = title;
exports.to$prime                   = to$prime;
exports.transform                  = transform;
exports.type$prime                 = type$prime;
exports.u1                         = u1;
exports.u2                         = u2;
exports.underlinePosition          = underlinePosition;
exports.underlineThickness         = underlineThickness;
exports.unicode                    = unicode;
exports.unicodeRange               = unicodeRange;
exports.unitsPerEm                 = unitsPerEm;
exports.vAlphabetic                = vAlphabetic;
exports.vHanging                   = vHanging;
exports.vIdeographic               = vIdeographic;
exports.vMathematical              = vMathematical;
exports.values                     = values;
exports.version                    = version;
exports.vertAdvY                   = vertAdvY;
exports.vertOriginX                = vertOriginX;
exports.vertOriginY                = vertOriginY;
exports.viewBox                    = viewBox;
exports.viewTarget                 = viewTarget;
exports.width                      = width;
exports.widths                     = widths;
exports.x                          = x;
exports.xHeight                    = xHeight;
exports.x1                         = x1;
exports.x2                         = x2;
exports.xChannelSelector           = xChannelSelector;
exports.xlinkActuate               = xlinkActuate;
exports.xlinkArcrole               = xlinkArcrole;
exports.xlinkHref                  = xlinkHref;
exports.xlinkRole                  = xlinkRole;
exports.xlinkShow                  = xlinkShow;
exports.xlinkTitle                 = xlinkTitle;
exports.xlinkType                  = xlinkType;
exports.xmlBase                    = xmlBase;
exports.xmlLang                    = xmlLang;
exports.xmlSpace                   = xmlSpace;
exports.y                          = y;
exports.y1                         = y1;
exports.y2                         = y2;
exports.yChannelSelector           = yChannelSelector;
exports.z                          = z;
exports.zoomAndPan                 = zoomAndPan;
exports.alignmentBaseline          = alignmentBaseline;
exports.baselineShift              = baselineShift;
exports.clipPath                   = clipPath;
exports.clipRule                   = clipRule;
exports.clip                       = clip;
exports.colorInterpolationFilters  = colorInterpolationFilters;
exports.colorInterpolation         = colorInterpolation;
exports.colorProfile               = colorProfile;
exports.colorRendering             = colorRendering;
exports.color                      = color;
exports.cursor                     = cursor;
exports.direction                  = direction;
exports.display                    = display;
exports.dominantBaseline           = dominantBaseline;
exports.enableBackground           = enableBackground;
exports.fillOpacity                = fillOpacity;
exports.fillRule                   = fillRule;
exports.fill                       = fill;
exports.filter                     = filter;
exports.floodColor                 = floodColor;
exports.floodOpacity               = floodOpacity;
exports.fontFamily                 = fontFamily;
exports.fontSizeAdjust             = fontSizeAdjust;
exports.fontSize                   = fontSize;
exports.fontStretch                = fontStretch;
exports.fontStyle                  = fontStyle;
exports.fontVariant                = fontVariant;
exports.fontWeight                 = fontWeight;
exports.glyphOrientationHorizontal = glyphOrientationHorizontal;
exports.glyphOrientationVertical   = glyphOrientationVertical;
exports.imageRendering             = imageRendering;
exports.kerning                    = kerning;
exports.letterSpacing              = letterSpacing;
exports.lightingColor              = lightingColor;
exports.markerEnd                  = markerEnd;
exports.markerMid                  = markerMid;
exports.markerStart                = markerStart;
exports.mask                       = mask;
exports.opacity                    = opacity;
exports.overflow                   = overflow;
exports.pointerEvents              = pointerEvents;
exports.shapeRendering             = shapeRendering;
exports.stopColor                  = stopColor;
exports.stopOpacity                = stopOpacity;
exports.strokeDasharray            = strokeDasharray;
exports.strokeDashoffset           = strokeDashoffset;
exports.strokeLinecap              = strokeLinecap;
exports.strokeLinejoin             = strokeLinejoin;
exports.strokeMiterlimit           = strokeMiterlimit;
exports.strokeOpacity              = strokeOpacity;
exports.strokeWidth                = strokeWidth;
exports.stroke                     = stroke;
exports.textAnchor                 = textAnchor;
exports.textDecoration             = textDecoration;
exports.textRendering              = textRendering;
exports.unicodeBidi                = unicodeBidi;
exports.visibility                 = visibility;
exports.wordSpacing                = wordSpacing;
exports.writingMode                = writingMode;
/* Vdom Not a pure module */
